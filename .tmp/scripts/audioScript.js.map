{"version":3,"sources":["audioScript.js"],"names":["audioJson","json","$","ajax","data","audioWrapper","forEach","obj","index","audioImage","image","audioSlider","audioName","name","audio","audioObjTemplate","append","playAudio","audioIndex","audioVolume","clickedAudio","grep","id","currAudio","slider","paused","play","addClass","noUiSlider","create","start","connect","range","on","values","handle","volume","Math","round","hide","show","pause","removeClass","destroy","playCount","i","length","pauseAll","playing","audioVolumeArray","vol","document","getElementById","push","shuffle","floor","random","globalPlay","sampleAudioCombinations","localStorage","getItem","split","parseFloat","save","setItem","runMe","convertToInlineSvg"],"mappings":"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","file":"audioScript.js","sourcesContent":["const audioJson = (function() {\n  var json = null;\n  $.ajax({\n    'async': false,\n    'global': false,\n    'url': 'static/audioDetails.json',\n    'dataType': 'json',\n    'success': function(data) {\n      json = data;\n    }\n  });\n  return json;\n})();\n\nconst audioWrapper = $('.audioSection');\n\naudioJson.forEach((obj, index) => {\n  let audioImage = '<img src=\"./../assets/images/' + obj.image + '.svg\" class=\"svg audioImage audioImage' + index + '\" />';\n  let audioSlider = '<div id=\"slider' + index + '\" class=\"slider\"></div>';\n  let audioName = '<div class=\"audioName audioName' + index + '\">' + obj.name + '</div>'\n  let audio = '<audio id=\"audio' + index + '\" class=\"audio audio' + index + ' hidden\" loop><source src=\"./../assets/audio/' + obj.audio + '.mp3\" type=\"audio/mpeg\"></audio>';\n  let audioObjTemplate = '<div class=\"audioItem audioItem' + index + '\" onClick=\"playAudio(' + index + ')\">' + audioImage + audio + audioName + audioSlider + '</div>';\n\n  audioWrapper.append(audioObjTemplate);\n});\n\nconst playAudio = (audioIndex, audioVolume = 50) => {\n  let clickedAudio = $.grep(audioJson, (obj) => {\n    return obj.id === audioIndex;\n  })\n  const currAudio = $('.audio' + audioIndex)[0];\n  const slider = $('#slider' + audioIndex)[0];\n\n  if (currAudio.paused) {\n    currAudio.play();\n\n    $('.audioItem' + audioIndex).addClass('active');\n\n    noUiSlider.create(slider, {\n      start: audioVolume,\n      connect: [true, false],\n      range: {\n        'min': 0,\n        'max': 100\n      }\n    });\n\n    slider.noUiSlider.on('update', (values, handle) => {\n      currAudio.volume = Math.round(values[handle]) / 100;\n    });\n    // $('.randomPlay.play').addClass( 'pause' ).removeClass( 'play' );\n    $('.randomPlay.play').hide();\n    $('.randomPlay.pause').show();\n  }\n  else {\n    currAudio.pause();\n    $('.audioItem' + audioIndex).removeClass('active');\n    slider.noUiSlider.destroy();\n    let playCount = 0;\n    for (let i = 0; i < audioJson.length; i++) {\n      if ($('.audio' + i)[0].paused) playCount++;\n    }\n    if(playCount === audioJson.length) {\n      // $('.randomPlay.pause').addClass( 'play' ).removeClass( 'pause' );\n      $('.randomPlay.play').show();\n      $('.randomPlay.pause').hide();\n    }\n\n  }\n}\n\n/* Pause all the current playing audios and return the playing status */\n/* Returns true if at least one of the audio is playing */\nconst pauseAll = () => {\n  let playing = false;\n  let audioVolumeArray = [];\n  for (let i = 0; i < audioJson.length; i++) {\n    let vol = 0;\n    if (!$('.audio' + i)[0].paused) {\n      playAudio(i);\n      vol = document.getElementById('audio' + i).volume;\n      playing = true;\n    }\n    audioVolumeArray.push(vol);\n  }\n  // $('.randomPlay.pause').addClass( 'play' ).removeClass( 'pause' );\n  $('.randomPlay.play').show();\n  $('.randomPlay.pause').hide();\n  return playing;\n}\n\n/* Random shuffling between the available audios */\nconst shuffle = () => {\n  pauseAll();\n  for (var i = 0; i < 4; i++) {\n      playAudio(Math.floor(Math.random()*audioJson.length));\n    }\n}\n\n/* Toggle between play and pause of global play button */\nconst globalPlay = () => {\n  let sampleAudioCombinations = {\n    0: [.12,0,0,0.3,0,0.3,0,0,0.3,0,.78,.5],\n    1: [.9,0,0,0,0.7,0,0.8,0,0.3,0.2,0,0],\n    2: [.32,0,0.3,0,0,0,0,0.7,0.3,0.2,.2,.9],\n    3: [0.7,0,0.4,0.1,0.6,0,0,0,0.33,0.72,0,0]\n  }\n  let audioVolume = localStorage.getItem('audioVolumeArray');\n  let audioVolumeArray = [];\n  if(audioVolume) {\n    audioVolumeArray = audioVolume.split(',');\n  }\n  else {\n    audioVolumeArray = sampleAudioCombinations[Math.floor(Math.random()*4)];\n  }\n  for (let i = 0; i < audioVolumeArray.length; i++) {\n    if(parseFloat(audioVolumeArray[i]) != 0) {\n      playAudio(i, parseFloat(audioVolumeArray[i])*100);\n    }\n  }\n}\n\n/* To save the current playing combination in local storage */\nconst save = () => {\n  let audioVolumeArray = [];\n  for (let i = 0; i < audioJson.length; i++) {\n    let vol = 0;\n    if (!$('.audio' + i)[0].paused) {\n      vol = document.getElementById('audio' + i).volume;\n    }\n    audioVolumeArray.push(vol);\n  }\n  localStorage.setItem('audioVolumeArray', audioVolumeArray);\n}\n\n$(function() {\n  const obj = {\n    runMe: function() {\n      $('.audio-icon');\n      $('.icon');\n    }\n  };\n  $('.randomPlay.pause').hide();\n  convertToInlineSvg(obj);\n})\n"]}